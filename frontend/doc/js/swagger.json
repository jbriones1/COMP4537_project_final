{
  "swagger": "2.0",
  "info": {
    "description": "This is an application to act as a checklist for students to keep track of their daily tasks. This is application is not to be used as a calendar, but rather as a daily checklist.",
    "version": "1.0.0",
    "title": "Brian Scheduler"
  },
  "host": "scheduler.herokuapp.com",
  "basePath": "/v1",
  "tags": [
    {
      "name": "task",
      "description": "All the ways to change tasks"
    },
    {
      "name": "taskList",
      "description": "All the ways to change task lists"
    },
    {
      "name": "user",
      "description": "Operations regarding accounts and users"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/task": {
      "post": {
        "tags": [
          "task"
        ],
        "summary": "Add a new task",
        "description": "",
        "operationId": "addTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Task that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/task/moveTasks": {
      "post": {
        "tags": [
          "task"
        ],
        "summary": "Take all unfinished tasks and insert them to the next day",
        "description": "",
        "operationId": "moveTasks",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Tasks successfully moved"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/task/{taskID}": {
      "put": {
        "tags": [
          "task"
        ],
        "summary": "Update an existing task",
        "description": "",
        "operationId": "updateTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "ID object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task successfully updated"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Task not found"
          },
          "405": {
            "description": "Task cannot be changed"
          }
        }
      },
      "delete": {
        "tags": [
          "task"
        ],
        "summary": "Delete a task",
        "description": "",
        "operationId": "deleteTask",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "Task ID to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/task/complete/{taskID}": {
      "put": {
        "tags": [
          "task"
        ],
        "summary": "Mark a task complete",
        "description": "",
        "operationId": "completeTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "ID object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully changed task to complete"
          },
          "401": {
            "description": "Invalid user"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/taskList/{userID}/today": {
      "get": {
        "tags": [
          "taskList"
        ],
        "summary": "Retrieve the current day's task list",
        "description": "",
        "operationId": "getTaskList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "User to get tasks for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "No tasks found"
          }
        }
      }
    },
    "/taskList/{userID}/yesterday": {
      "get": {
        "tags": [
          "taskList"
        ],
        "summary": "Retrieve the yesterday's task list",
        "description": "",
        "operationId": "getTaskListYesterday",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "User to get tasks for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "No tasks to retrieve"
          }
        }
      }
    },
    "/taskList/{taskListID}": {
      "delete": {
        "tags": [
          "taskList"
        ],
        "summary": "Delete a task list",
        "description": "",
        "operationId": "deleteTaskList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskListID",
            "in": "path",
            "description": "Task list ID to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Invalid user"
          },
          "404": {
            "description": "Task list not found"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user",
        "description": "",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created"
          },
          "400": {
            "description": "Invalid user info supplied"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{userID}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user ID",
        "description": "",
        "operationId": "getUserByID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "The name of the user to retrieve info for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "properties": {
        "taskID": {
          "type": "integer",
          "format": "int64"
        },
        "taskListID": {
          "type": "integer",
          "format": "int64"
        },
        "taskName": {
          "type": "integer"
        },
        "taskDescription": {
          "type": "string"
        },
        "isComplete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Task"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "User"
      }
    }
  }
}